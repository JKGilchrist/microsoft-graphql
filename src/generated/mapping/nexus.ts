/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */






declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  orderBy: { // input type
    field: NexusGenEnums['userOrderFieldType']; // userOrderFieldType!
    orderStyle?: NexusGenEnums['order'] | null; // order
  }
}

export interface NexusGenEnums {
  order: "ASC" | "DESC"
  userOrderFieldType: "displayName" | "userPrincipalName"
}

export interface NexusGenRootTypes {
  Group: { // root type
    createdDateTime: string; // String!
    description: string; // String!
    displayName: string; // String!
    id: string; // String!
    mail?: string | null; // String
    mailNickname?: string | null; // String
    members: NexusGenRootTypes['User'][]; // [User!]!
    visibility?: string | null; // String
  }
  Query: {};
  User: { // root type
    displayName: string; // String!
    givenName?: string | null; // String
    groups?: NexusGenRootTypes['Group'][] | null; // [Group!]
    id: string; // String!
    jobTitle?: string | null; // String
    mail?: string | null; // String
    surname?: string | null; // String
    type: string; // String!
    userPrincipalName?: string | null; // String
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  orderBy: NexusGenInputs['orderBy'];
  order: NexusGenEnums['order'];
  userOrderFieldType: NexusGenEnums['userOrderFieldType'];
}

export interface NexusGenFieldTypes {
  Group: { // field return type
    createdDateTime: string; // String!
    description: string; // String!
    displayName: string; // String!
    id: string; // String!
    mail: string | null; // String
    mailNickname: string | null; // String
    members: NexusGenRootTypes['User'][]; // [User!]!
    visibility: string | null; // String
  }
  Query: { // field return type
    group: NexusGenRootTypes['Group'] | null; // Group
    groups: NexusGenRootTypes['Group'][]; // [Group!]!
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  User: { // field return type
    displayName: string; // String!
    givenName: string | null; // String
    groups: NexusGenRootTypes['Group'][] | null; // [Group!]
    id: string; // String!
    jobTitle: string | null; // String
    mail: string | null; // String
    surname: string | null; // String
    type: string; // String!
    userPrincipalName: string | null; // String
  }
}

export interface NexusGenArgTypes {
  Group: {
    members: { // args
      orderBy?: NexusGenInputs['orderBy'] | null; // orderBy
    }
  }
  Query: {
    group: { // args
      id: string; // String!
    }
    user: { // args
      id: string; // String!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Group" | "Query" | "User";

export type NexusGenInputNames = "orderBy";

export type NexusGenEnumNames = "order" | "userOrderFieldType";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}
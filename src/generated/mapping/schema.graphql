### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


input filter {
  """The field to filter by"""
  field: userFilterFieldType!

  """the filtering method to be used"""
  type: type!

  """The value to compare to"""
  value: String!
}

type Group {
  createdDateTime: String!

  """Group's description."""
  description: String!

  """Group's display name."""
  displayName: String!

  """Group's Microsoft Graph id."""
  id: String!
  mail: String
  mailNickname: String

  """Group's members."""
  members(orderBy: orderBy): [User!]!
  visibility: String
}

enum order {
  ASCENDING
  DESCENDING
}

input orderBy {
  """The field(s?TODO) to order by"""
  field: userOrderFieldType!

  """Ascending or descending order, the former is the default"""
  orderStyle: order
}

type Query {
  group(
    """The id of the expected group"""
    id: String!
  ): Group
  groups(
    """The maximum number of results expected"""
    top: Int
  ): [Group!]!
  user(
    """The id of the expected user"""
    id: String!
  ): User
  users(
    """
    Specify which field and by what value that field should start with, case insensitive
    """
    filter: filter
    orderBy: orderBy

    """The maximum number of results expected"""
    top: Int
  ): [User!]!
}

enum type {
  EQUAL
  GREATER_THAN
  GREATER_THAN_OR_EQUAL
  LESS_THAN
  LESS_THAN_OR_EQUAL
  NOT_EQUAL
  STARTS_WITH
}

type User {
  """User's display name."""
  displayName: String!

  """User's given name."""
  givenName: String

  """Groups the user is a member of"""
  groups: [Group!]

  """User's Microsoft Graph id."""
  id: String!

  """User's job title."""
  jobTitle: String

  """User's email address."""
  mail: String

  """User's surname."""
  surname: String

  """What type the user is"""
  type: String!

  """User's principal name."""
  userPrincipalName: String
}

enum userFilterFieldType {
  displayName
  givenName
  jobTitle
  mail
  surName
  userPrincipalName
}

enum userOrderFieldType {
  displayName
  userPrincipalName
}
